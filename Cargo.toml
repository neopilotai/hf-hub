[package]
name = "hf-hub"
version = "0.4.3"
edition = "2021"
homepage = "https://github.com/neopilotai/hf-hub"
license = "Apache-2.0"
documentation = "https://docs.rs/hf-hub"
repository = "https://github.com/neopilotai/hf-hub"
readme = "README.md"
keywords = ["huggingface", "hf", "hub", "machine-learning"]
categories = ["api-bindings", "machine-learning", "network-programming"]
description = """
This crate aims to ease interaction with [Hugging Face](https://huggingface.co/).
It is compatible with a subset of the [huggingface_hub](https://github.com/huggingface/huggingface_hub/) Python package.
"""

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]
dirs = "6"
log = "0.4.19"
futures = { version = "0.3.28", optional = true }
http = { version = "1.0.0", optional = true }
indicatif = { version = "0.17.5", optional = true }
num_cpus = { version = "1.15.0", optional = true }
rand = { version = "0.9", optional = true }
reqwest = { version = "0.12.2", optional = true, default-features = false, features = [
  "json",
  "stream",
] }
serde = { version = "1", features = ["derive"], optional = true }
serde_json = { version = "1", optional = true }
thiserror = { version = "2", optional = true }
tokio = { version = "1.29.1", optional = true, features = ["fs", "macros"] }
ureq = { version = "3", optional = true, features = ["json", "socks-proxy"] }
native-tls = { version = "0.2.12", optional = true }
# If vendored OpenSSL is preferred by default, use:
# native-tls = { version = "0.2.12", optional = true, features = ["vendored"] }

[target.'cfg(windows)'.dependencies.windows-sys]
version = "0.60"
features = ["Win32_Foundation", "Win32_Storage_FileSystem", "Win32_System_IO"]
optional = true

[target.'cfg(unix)'.dependencies.libc]
version = "0.2"
optional = true

[features]
default = ["default-tls", "tokio", "reqwest"]

# Enable native TLS with system libraries (default) or vendored (see below).
default-tls = ["native-tls"]

# Use vendored OpenSSL for native-tls in both reqwest and ureq
native-tls = ["dep:reqwest", "reqwest?/native-tls-vendored", "dep:native-tls", "dep:ureq", "ureq?/native-tls"]

# Use reqwest/ureq with rustls for TLS instead of native-tls
rustls-tls = ["reqwest?/rustls-tls"]

# Enable full async/await stack and extended features
tokio = [
  "dep:futures",
  "dep:indicatif",
  "dep:num_cpus",
  "dep:rand",
  "dep:reqwest",
  "reqwest/charset",
  "reqwest/http2",
  "reqwest/macos-system-configuration",
  "dep:serde",
  "dep:serde_json",
  "dep:thiserror",
  "dep:tokio",
  "tokio/rt-multi-thread",
  "dep:libc",
  "dep:windows-sys",
]

# Enable minimal sync HTTP stack
ureq = [
  "dep:http",
  "dep:indicatif",
  "dep:rand",
  "dep:serde",
  "dep:serde_json",
  "dep:thiserror",
  "dep:ureq",
  "dep:libc",
  "dep:windows-sys",
]

# Convenience feature for full functionality (optional)
full = ["tokio", "ureq", "native-tls", "rustls-tls"]

[dev-dependencies]
hex-literal = "1.0"
sha2 = "0.10"
tokio-test = "0.4.2"
